name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Run linting
        run: npm run lint

      - name: Run unit tests
        run: npm test
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}

      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}

      - name: Build application
        run: npm run build
        env:
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AUTH_GOOGLE_ID: ${{ secrets.AUTH_GOOGLE_ID }}
          AUTH_GOOGLE_SECRET: ${{ secrets.AUTH_GOOGLE_SECRET }}
          AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID }}
          AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}
          NYLAS_API_SECRET_KEY: ${{ secrets.NYLAS_API_SECRET_KEY }}
          NYLAS_CLIENT_ID: ${{ secrets.NYLAS_CLIENT_ID }}
          UPLOADTHING_TOKEN: ${{ secrets.UPLOADTHING_TOKEN }}
